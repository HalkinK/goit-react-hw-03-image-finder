{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/ApiService.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","searchQuery","handleQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","warn","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","name","onChange","React","Component","ImageGalleryItem","src","imageForModal","tags","alt","ImageGallery","gallery","onImageClick","onClick","map","id","webformatURL","largeImageURL","Button","text","ApiServise","fetchImages","page","fetch","then","responce","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","onEscClick","e","code","onClose","handleBackdropClick","console","log","target","window","addEventListener","removeEventListener","createPortal","Status","App","status","showModal","currentImage","renderGallery","prevState","hits","catch","error","finally","scrollTo","top","documentElement","scrollHeight","behavior","handleFormSubmit","toggleModal","nodeName","dataset","img","prevProps","color","height","width","timeout","position","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a47a44c8.chunk.js","sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from \"prop-types\";\n\nclass Searchbar extends React.Component {\n  state = { searchQuery: \"\" };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleQueryChange = (event) => {\n    this.setState({ searchQuery: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.searchQuery.trim() === \"\") {\n      return toast.warn(\"Введите свой запрос\");\n    }\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.searchQuery}\n            name={\"searchQuery\"}\n            onChange={this.handleQueryChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from \"react\";\n\nconst ImageGalleryItem = ({ src, imageForModal, tags }) => (\n  <li className=\"ImageGalleryItem\">\n    <img\n      src={src}\n      alt={tags}\n      data-img={imageForModal}\n      className=\"ImageGalleryItem-image\"\n    />\n  </li>\n);\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGallery = ({ gallery, onImageClick }) => (\n  <ul className=\"ImageGallery\" onClick={onImageClick}>\n    {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\n      <ImageGalleryItem\n        key={id}\n        src={webformatURL}\n        imageForModal={largeImageURL}\n        tags={tags}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  gallery: PropTypes.arrayOf(PropTypes.object),\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ text, onClick }) => (\n  <button className=\"Button\" type=\"button\" onClick={onClick}>\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","// import axios from \"axios\";\n\nconst API_KEY = \"21946293-ddb661a7c3de00e68a212d36c\";\nconst url = \"https://pixabay.com/api/?image_type=photo&orientation=horizontal\";\n\nfunction fetchImages(searchQuery, page) {\n  return fetch(\n    `${url}&q=${searchQuery}&page=${page}&per_page=12&key=${API_KEY}`\n  ).then((responce) => {\n    if (responce.ok) {\n      return responce.json();\n    }\n    return Promise.reject(new Error(\"No response from server\"));\n  });\n}\n\nconst ApiServise = { fetchImages };\n\nexport default ApiServise;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport default class Modal extends React.Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    imageForModal: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  };\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.onEscClick);\n  }\n\n  componentDidUpdate() {\n    window.removeEventListener(\"keydown\", this.onEscClick);\n  }\n\n  onEscClick = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = (e) => {\n    console.log(e.currentTarget);\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { imageForModal, tags } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={imageForModal} alt={tags} />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n","import React from \"react\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"./App.css\";\nimport Serchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport ApiServise from \"./services/ApiService\";\nimport Modal from \"./components/Modal/Modal\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nclass App extends React.Component {\n  state = {\n    searchQuery: \"\",\n    page: 1,\n    gallery: [],\n    status: \"idle\",\n    showModal: false,\n    currentImage: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({ status: \"pending\" });\n      this.renderGallery();\n    }\n  }\n\n  renderGallery = () => {\n    const { searchQuery, page } = this.state;\n\n    ApiServise.fetchImages(searchQuery, page)\n      .then((responce) => {\n        // this.loaderToggle();\n\n        this.setState((prevState) => ({\n          gallery: [...prevState.gallery, ...responce.hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch((error) => this.setState({ error, status: Status.REJECTED }))\n      .finally(() => {\n        // this.loaderToggle();\n\n        this.setState({ status: Status.RESOLVED });\n\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      });\n  };\n\n  handleFormSubmit = (searchQuery) => {\n    this.setState({\n      searchQuery: searchQuery,\n      page: 1,\n      gallery: [],\n    });\n  };\n\n  // onLoadMore = () => {\n  //   this.setState((prevState) => ({\n  //     page: prevState.page + 1,\n  //   }));\n  // };\n\n  // loaderToggle = () => {\n  //   this.setState((prevState) => ({\n  //     loader: !prevState.loader,\n  //   }));\n  // };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onImageClick = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      return;\n    }\n    this.setState({\n      currentImage: e.target.dataset.img,\n    });\n\n    this.toggleModal();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Serchbar\n          onSubmit={this.handleFormSubmit}\n          value={this.state.searchQuery}\n        />\n        {this.state.status === Status.PENDING && (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={200}\n            width={200}\n            timeout={3000} //3 secs\n          />\n        )}\n        {this.state.status === Status.REJECTED && (\n          <h1>{\"Something went wrong\"}</h1>\n        )}\n        {this.state.status === Status.RESOLVED && (\n          <>\n            <ImageGallery\n              gallery={this.state.gallery}\n              onImageClick={this.onImageClick}\n            />\n\n            <Button onClick={this.renderGallery} text={\"Load more\"} />\n          </>\n        )}\n        {this.state.showModal && (\n          <Modal\n            onClose={this.toggleModal}\n            imageForModal={this.state.currentImage}\n          />\n        )}\n\n        <ToastContainer position=\"top-center\" autoClose={3000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}